---
import { getCollection } from 'astro:content';

export interface Props {
  category?: string;
  tags?: string[];
  featured?: boolean;
  limit?: number;
  columns?: 2 | 3 | 4;
  showOverlay?: boolean;
}

const {
  category,
  tags = [],
  featured = false,
  limit = 12,
  columns = 3,
  showOverlay = true
} = Astro.props;

// Get photos from content collection
const photos = await getCollection('photos');

// Filter photos based on props
let filteredPhotos = photos;

if (category) {
  filteredPhotos = filteredPhotos = filteredPhotos.filter(photo => photo.data.category === category);
}

if (tags.length > 0) {
  filteredPhotos = filteredPhotos.filter(photo => 
    tags.some(tag => photo.data.tags.includes(tag))
  );
}

if (featured) {
  filteredPhotos = filteredPhotos.filter(photo => photo.data.featured);
}

// Apply limit
const displayPhotos = filteredPhotos.slice(0, limit);
---

<div class="rediant-photo-gallery" data-columns={columns}>
  {displayPhotos.map((photo, index) => (
    <div class="rediant-photo-item group">
      <img 
        src={`/images/${photo.data.filename}`} 
        alt={photo.data.alt}
        loading="lazy"
        class="rediant-photo-image"
      />
      {showOverlay && (
        <div class="rediant-photo-overlay">
          <h3 class="rediant-photo-title">{photo.data.title}</h3>
          <p class="rediant-photo-description">{photo.data.description}</p>
          <div class="rediant-photo-tags">
            {photo.data.tags.map(tag => (
              <span class="rediant-photo-tag">{tag}</span>
            ))}
          </div>
        </div>
      )}
    </div>
  ))}
</div>

<style>
  .rediant-photo-gallery {
    display: grid;
    gap: 1rem;
    padding: 2rem;
  }

  .rediant-photo-gallery[data-columns="2"] {
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
  }

  .rediant-photo-gallery[data-columns="3"] {
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
  }

  .rediant-photo-gallery[data-columns="4"] {
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
  }

  .rediant-photo-item {
    position: relative;
    overflow: hidden;
    border-radius: 0.5rem;
    aspect-ratio: 4/5;
    cursor: pointer;
    transition: transform 0.3s ease;
  }

  .rediant-photo-item:hover {
    transform: scale(1.02);
  }

  .rediant-photo-image {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.3s ease;
  }

  .rediant-photo-item:hover .rediant-photo-image {
    transform: scale(1.05);
  }

  .rediant-photo-overlay {
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    background: linear-gradient(transparent, rgba(0,0,0,0.7));
    color: white;
    padding: 1rem;
    transform: translateY(100%);
    transition: transform 0.3s ease;
  }

  .rediant-photo-item:hover .rediant-photo-overlay {
    transform: translateY(0);
  }

  .rediant-photo-title {
    font-size: 1.125rem;
    font-weight: 600;
    margin-bottom: 0.5rem;
  }

  .rediant-photo-description {
    font-size: 0.875rem;
    opacity: 0.9;
    margin-bottom: 0.75rem;
  }

  .rediant-photo-tags {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
  }

  .rediant-photo-tag {
    background: rgba(255, 255, 255, 0.2);
    padding: 0.25rem 0.5rem;
    border-radius: 0.25rem;
    font-size: 0.75rem;
  }

  @media (max-width: 768px) {
    .rediant-photo-gallery {
      grid-template-columns: 1fr;
      padding: 1rem;
    }
  }
</style>
